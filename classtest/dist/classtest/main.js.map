{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.scss","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/app/shared/classes/field-sorter.ts","webpack:///./src/app/shared/classes/todo.ts","webpack:///./src/app/shared/footer/footer.component.html","webpack:///./src/app/shared/footer/footer.component.scss","webpack:///./src/app/shared/footer/footer.component.ts","webpack:///./src/app/shared/guards/is-logged-in.guard.ts","webpack:///./src/app/shared/header/header.component.html","webpack:///./src/app/shared/header/header.component.scss","webpack:///./src/app/shared/header/header.component.ts","webpack:///./src/app/shared/services/auth.service.ts","webpack:///./src/app/shared/services/todo.service.ts","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.scss","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/app/todo/todo.component.html","webpack:///./src/app/todo/todo.component.scss","webpack:///./src/app/todo/todo.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { TodoComponent } from './todo/todo.component';\nimport { IsLoggedInGuard } from './shared/guards/is-logged-in.guard';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [],\n    component: TodoComponent,\n    canActivate: [IsLoggedInGuard]\n  },\n  { path: 'login', children: [], component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: '**', component: NotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<app-header></app-header>\\n<div class=\\\"jumbotron\\\">\\n    <div class=\\\"container\\\">\\n        <h1>{{title}}</h1>\\n    </div>\\n</div>\\n<div class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n</div>\\n<app-footer></app-footer>\"","module.exports = \"\"","import { Component } from '@angular/core';\nimport { HeaderComponent } from './shared/header/header.component';\nimport { FooterComponent } from './shared/footer/footer.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n    title = 'Our Awesome Todo App';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { AuthService } from './shared/services/auth.service';\nimport { SignupComponent } from './signup/signup.component';\nimport { TodoComponent } from './todo/todo.component';\nimport { TodoService } from './shared/services/todo.service';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTrashAlt, faSquare, faCheckSquare } from '@fortawesome/free-regular-svg-icons';\nimport { IsLoggedInGuard } from './shared/guards/is-logged-in.guard';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { HeaderComponent } from './shared/header/header.component';\nimport { FooterComponent } from './shared/footer/footer.component';\nimport { CookieModule } from 'ngx-cookie';\n\nlibrary.add(faTrashAlt, faCheckSquare, faSquare);\n\n@NgModule({\n  declarations: [ AppComponent,\n    LoginComponent,\n    SignupComponent,\n    TodoComponent,\n    NotFoundComponent,\n    HeaderComponent,\n    FooterComponent],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    CookieModule.forRoot(),\n    NgbModule.forRoot(),\n    FontAwesomeModule,\n  ],\n  providers: [AuthService, TodoService, IsLoggedInGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","module.exports = \"<h1>Login</h1>\\n<hr>\\n<div>\\n    <form autocomplete=\\\"off\\\" novalidate #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login(loginForm.value)\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\">Email:</label>\\n            <input name=\\\"email\\\" id=\\\"email\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Email...\\\" (ngModel)=\\\"email\\\" required #email=\\\"ngModel\\\" email />\\n            <div *ngIf=\\\"email.errors && (email.dirty || email.touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div [hidden]=\\\"!email.errors.required\\\">\\n                    Email is required\\n                </div>\\n                <div [hidden]=\\\"email.errors.required || !email.errors.email\\\">\\n                    Must be an email address\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"password\\\">Password:</label>\\n            <input name=\\\"password\\\" id=\\\"password\\\" type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password...\\\" (ngModel)=\\\"password\\\" required #password=\\\"ngModel\\\" />\\n            <div *ngIf=\\\"password.errors && (password.dirty || password.touched)\\\" class=\\\"alert alert-danger\\\">\\n                <div [hidden]=\\\"!password.errors.required\\\">\\n                    Password is required\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"loginForm.invalid\\\">Login</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n            <a routerLink=\\\"/signup\\\" class=\\\"btn btn-link\\\">create account</a>\\n        </div>\\n\\n        <div *ngIf=\\\"invalidLogin\\\" class=\\\"alert alert-danger\\\">\\n            Invalid Login\\n        </div>\\n    </form>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../shared/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  invalidLogin = false;\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  login(formValues) {\n    this.invalidLogin = false;\n    this.authService.login(formValues.email, formValues.password)\n      .subscribe(result => {\n        if (!result) {\n          console.log('login.component user not found');\n          this.invalidLogin = true;\n        } else {\n          console.log('login.component logged in. redirecting to home page');\n          this.invalidLogin = false;\n          this.router.navigate(['/']);\n        }\n      });\n  }\n}\n","module.exports = \"<p>\\n  not-found works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class FieldSorter {\n  // made static in order to not have to new up the class to use\n  public static sort(fieldNames: Array<string>, ignoreCase: boolean) {\n    return (item1: object, item2: object) => fieldNames.map((field: string) => {\n      // A-Z sorting\n      let direction: number = 1;\n\n      // if field starts with - then Z-A sorting\n      // strip off the - sign from field name\n      if (field.substring(0, 1) === '-') {\n        direction = -1;\n        field = field.substring(1);\n      }\n\n      // capture values so as not to change the original array field value\n      // important when doing case insensitive searches else items would display in lowercase\n      let item1Value = item1[field], item2Value = item2[field];\n\n      // if ignoring case and field value is a type of string then call toLocaleLowerCase on both fields.\n      // Used toLocaleLowerCase to accord for culture based sorting\n      if (ignoreCase === true) {\n        if (typeof item1Value === 'string') item1Value = item1Value.toLocaleLowerCase();\n        if (typeof item2Value === 'string') item2Value = item2Value.toLocaleLowerCase();\n      }\n\n      // item1 is higher = 1, lower = -1, equal = 0\n      return item1Value > item2Value ? direction : item1Value < item2Value ? -(direction) : 0;\n    }).reduce((item1SortValue: number, item2SortValue: number) => {\n      // values will be 1 or 0 based on the map function output.\n      // if item1SortValue is 1 and item2SortValue is 0 then item1 goes 1st\n      // if item1SortValue is 0 and item2SortValue is 1 then item2 goes 1st\n      // if both are equal then item2 will go 1st\n      return item1SortValue ? item1SortValue : item2SortValue\n    }, 0);\n  }\n}\n","export class Todo {\n  id: string;\n  item: string;\n  completed: boolean;\n  createdAt: Number;\n  updatedAt: Number;\n  user: string;\n\n  constructor(\n    item: string,\n    id?: string,\n    completed?: boolean,\n    createdAt?: Date,\n    updatedAt?: Date) {\n    this.id = id;\n    this.item = item;\n    this.completed = completed ? completed : false;\n    this.createdAt = createdAt ? createdAt.getTime() : new Date().getTime();\n    this.updatedAt = updatedAt ? updatedAt.getTime() : new Date().getTime();\n  }\n}\n","module.exports = \"<footer>\\n    <div class=\\\"float-left\\\">\\n        &copy;Angular WS\\n    </div>\\n    <div class=\\\"float-right\\\">\\n        env: {{ env }}\\n    </div>\\n</footer>\"","module.exports = \"footer {\\n  position: fixed;\\n  height: 50px;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  padding: 10px 5px;\\n  border-top: 1px solid #636c72;\\n  background-color: #eceeef;\\n  font-size: 0.8em;\\n  color: #003C71; }\\n  footer div {\\n    margin-left: 25px;\\n    margin-right: 25px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { environment } from '../../../environments/environment';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n  public env = environment.environmentName;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class IsLoggedInGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    const isLoggedIn = new Observable<boolean>(observer => {\n      this.authService.isAuthenticated().subscribe(\n        (res: boolean) => {\n          if (res) {\n            observer.next(true);\n            observer.complete();\n          } else {\n            this.router.navigate(['/login']);\n            observer.next(false);\n            observer.complete();\n          }\n        },\n        error => {\n          this.router.navigate(['/login']);\n          observer.next(false);\n          observer.complete();\n        }\n      );\n    });\n\n    return isLoggedIn;\n  }\n}\n","module.exports = \"<header>\\n    <nav class=\\\"navbar navbar-expand-md navbar-light\\\">\\n        <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">\\n            <img class=\\\"navbar-logo\\\" src=\\\"./assets/todo_logo.png\\\" alt=\\\"Logo\\\">\\n        </a>\\n\\n        <button (click)=\\\"toggleMenu()\\\" class=\\\"navbar-toggler navbar-toggler-right\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n\\n        <div [ngbCollapse]=\\\"isCollapsed\\\" class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n            <ul class=\\\"navbar-nav mr-auto\\\">\\n                <li class=\\\"nav-item active\\\">\\n                    <a (click)=\\\"toggleMenu()\\\" class=\\\"nav-link\\\" routerLink=\\\"/\\\">All Items</a>\\n                </li>\\n                <li (click)=\\\"toggleMenu()\\\" class=\\\"nav-item active\\\">\\n                    <a class=\\\"nav-link\\\" routerLink=\\\"/unknown\\\">Unknown</a>\\n                </li>\\n                <li (click)=\\\"toggleMenu()\\\" class=\\\"nav-item active\\\">\\n                    <a class=\\\"nav-link\\\" routerLink=\\\"/login\\\">Login</a>\\n                </li>\\n\\n                <li (click)=\\\"toggleMenu()\\\" class=\\\"nav-item active\\\">\\n                    <a class=\\\"nav-link\\\" routerLink=\\\"/signup\\\">Signup</a>\\n                </li>\\n            </ul>\\n            <ul class=\\\"navbar-nav navbar-light navbar-expand-md\\\">\\n                <li class=\\\"nav-item nav-link\\\">Welcome {{ loggedInUser?.email }}</li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" [hidden]=\\\"!loggedInUser\\\" (click)=\\\"logout()\\\">logout</a>\\n                </li>\\n            </ul>\\n        </div>\\n    </nav>\\n</header>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  isCollapsed = true;\n  loggedInUser = this.authService.getUser();\n\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  logout() {\n    this.authService.logout().subscribe(() => {\n      this.router.navigate(['/login']);\n    });\n  }\n\n  toggleMenu() {\n    this.isCollapsed = !this.isCollapsed;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\nimport { environment } from '../../../environments/environment';\nimport { User } from '../classes/user';\nimport { CookieService } from 'ngx-cookie';\n\nconst requestOptions = {\n  withCredentials: true,\n};\n\n@Injectable()\nexport class AuthService {\n  private url = `${environment.apiBaseUrl}/user`;\n  private cookieKey = 'currentUser';\n  constructor(private http: HttpClient, private cookieService: CookieService) {}\n\n  public getUser(): User {\n    return <User>this.cookieService.getObject(this.cookieKey);\n  }\n\n  private setUser(value: User): void {\n    this.cookieService.putObject(this.cookieKey, value);\n  }\n\n  private clearUser(): void {\n    this.cookieService.remove(this.cookieKey);\n  }\n\n  login(email: string, password: string): Observable<boolean | User> {\n    console.log('auth.service login');\n\n    const loginInfo = { email: email, password: password };\n\n    return this.http.put<User>(`${this.url}/login`, loginInfo, requestOptions).pipe(\n      tap((user: User) => {\n        if (user) {\n          console.log('logged in');\n          this.setUser(user);\n          return of(true);\n        }\n\n        console.log('not logged in');\n        this.clearUser();\n        return of(false);\n      }),\n      catchError(error => {\n        console.log('login error', error);\n        this.clearUser();\n        return of(false);\n      })\n    );\n  }\n\n  signup(email: string, password: string): Observable<boolean | User> {\n    const loginInfo = { email: email, password: password };\n    return this.http.post<User>(this.url, loginInfo, requestOptions).pipe(\n      tap((user: User) => {\n        if (user) {\n          this.setUser(user);\n          return of(true);\n        }\n\n        this.clearUser();\n        return of(false);\n      }),\n      catchError(error => {\n        console.log('signup error', error);\n        this.clearUser();\n        return of(false);\n      })\n    );\n  }\n\n  isAuthenticated(): Observable<boolean | User> {\n    return this.http.get<User>(`${this.url}/identity`, requestOptions).pipe(\n      tap((user: User) => {\n        if (user) {\n          console.log('logged in');\n          this.setUser(user);\n          return of(true);\n        }\n\n        console.log('not logged in');\n        this.clearUser();\n        return of(false);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        if (error.status !== 403) {\n          console.log('isAuthenticated error', error);\n        }\n        console.log('not logged in', error);\n        this.clearUser();\n        return of(false);\n      })\n    );\n  }\n\n  logout(): Observable<boolean | Response> {\n    return this.http.get(`${this.url}/logout`, requestOptions).pipe(\n      tap((res: Response) => {\n        this.clearUser();\n        if (res.ok) {\n          return of(true);\n        }\n\n        return of(false);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        this.clearUser();\n        return of(false);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Todo } from '../classes/todo';\nimport { environment } from '../../../environments/environment';\n\nconst requestOptions = { withCredentials: true };\n\n\n@Injectable()\nexport class TodoService {\n  constructor(private http: HttpClient) {}\n\n  private url = `${environment.apiBaseUrl}/todo`;\n\n  save(item: string): Observable<Todo> {\n    return this.http.post<Todo>(\n      this.url,\n      new Todo(item),\n      requestOptions\n    );\n  }\n\n  getAll(): Observable<Todo[]> {\n    return this.http.get<Todo[]>(this.url, requestOptions);\n  }\n\n  updateTodo(todo: Todo): Observable<string> {\n    const url =  `${this.url}/${todo.id}`;\n\n    return this.http.patch(url, todo, {\n      withCredentials: true,\n      responseType: 'text',\n    });\n  }\n\n  deleteTodo(todo: Todo): Observable<string> {\n    const url =  `${this.url}/${todo.id}`;\n\n    return this.http.delete(url, {\n      withCredentials: true,\n      responseType: 'text',\n    });\n  }\n}\n","module.exports = \"<h1>Sign Up</h1>\\n<hr>\\n<div>\\n  <form #signupForm=\\\"ngForm\\\" (ngSubmit)=\\\"signup(signupForm.value)\\\" autocomplete=\\\"off\\\" novalidate>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"userName\\\">Email:</label>\\n      <input #email=\\\"ngModel\\\" (ngModel)=\\\"email\\\" name=\\\"email\\\" id=\\\"email\\\" required email id=\\\"email\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n        placeholder=\\\"Email...\\\" />\\n      <div *ngIf=\\\"email.errors && (email.dirty || email.touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div [hidden]=\\\"!email.errors.required\\\">\\n          Email is required\\n        </div>\\n        <div [hidden]=\\\"!email.errors.email\\\">\\n          Must be an email address\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password:</label>\\n      <input #password=\\\"ngModel\\\" (ngModel)=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" required minlength=\\\"6\\\" id=\\\"password\\\" type=\\\"password\\\"\\n        class=\\\"form-control\\\" placeholder=\\\"Password...\\\" />\\n      <div *ngIf=\\\"password.errors && (password.dirty || password.touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div [hidden]=\\\"!password.errors.required\\\">\\n          Password is required\\n        </div>\\n        <div [hidden]=\\\"!password.errors.minlength\\\">\\n          Password must be at least 6 characters long.\\n        </div>\\n      </div>\\n    </div>\\n\\n    <button type=\\\"submit\\\" [disabled]=\\\"signupForm.invalid\\\" class=\\\"btn btn-primary\\\">Sign Up</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n    <a routerLink=\\\"/login\\\" class=\\\"btn btn-link\\\">login to existing account</a>\\n\\n  </form>\\n  <br />\\n  <div *ngIf=\\\"loginInvalid\\\" class=\\\"alert alert-danger\\\">Invalid Login Info</div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../shared/services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n  loginInvalid = false;\n  constructor(private authService: AuthService, private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  signup(formValues) {\n    this.authService.signup(formValues.email, formValues.password)\n      .subscribe(result => {\n        if (!result) {\n          this.loginInvalid = true;\n        } else {\n          this.loginInvalid = false;\n          this.router.navigate(['/']);\n        }\n      });\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"page-header\\\">\\n    <h1 align=\\\"center\\\">Todo List</h1>\\n     <p class=\\\"lead\\\">You've got <em>{{openItemCount}}</em> things to do</p>\\n  </div>\\n  <form (ngSubmit)=\\\"save()\\\" role=\\\"form\\\" [formGroup]=\\\"addForm\\\" class=\\\"text-center\\\">\\n    <div class=\\\"form-group row\\\">\\n      <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"text\\\" [ngClass]=\\\"{'is-invalid': formErrors.item}\\\" class=\\\"form-control form-control-lg\\\" formControlName=\\\"item\\\"\\n          placeholder=\\\"Todo!\\\">\\n      </div>\\n      <div class=\\\"col-sm-2\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-lg btn-block\\\" [disabled]=\\\"addForm.invalid\\\">Add</button>\\n      </div>\\n    </div>\\n  </form>\\n  <div *ngIf=\\\"formErrors.item\\\" class=\\\"alert alert-danger\\\">\\n    {{ formErrors.item }}\\n  </div>\\n  <div *ngIf=\\\"errorMessage\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n    <h3>Error Saving</h3>\\n    {{ errorMessage }}\\n  </div>\\n  <div class=\\\"row todo\\\" *ngFor=\\\"let todoItem of todoList\\\">\\n    <div class=\\\"col-1\\\" (click)=\\\"completeTodo(todoItem)\\\">\\n      <fa-icon [icon]=\\\"['far', todoItem.completed  ? 'check-square' : 'square']\\\"></fa-icon>\\n    </div>\\n    <div class=\\\"col-10 done-{{todoItem.completed}}\\\">\\n      {{todoItem.item}}\\n      <br />\\n      <small>created: {{ todoItem.createdAt | date:'short'}}</small>\\n    </div>\\n    <div class=\\\"col-1\\\" (click)=\\\"deleteTodo(todoItem)\\\">\\n      <fa-icon [icon]=\\\"['far', 'trash-alt']\\\"></fa-icon>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"div.todo {\\n  width: 100%;\\n  padding-bottom: .2em;\\n  padding-top: .2em;\\n  border-bottom: 1px solid #636c72;\\n  font-size: 1.4em; }\\n  div.todo small {\\n    font-size: .7em;\\n    color: #636c72; }\\n  div.todo fa-icon {\\n    width: 40px;\\n    padding-right: 10px;\\n    vertical-align: middle; }\\n  div.todo .done-true {\\n    text-decoration: line-through;\\n    color: #636c72; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { TodoService } from '../shared/services/todo.service';\nimport { Todo } from '../shared/classes/todo';\nimport { FieldSorter } from '../shared/classes/field-sorter';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.scss'],\n})\nexport class TodoComponent implements OnInit {\n  addForm: FormGroup;\n  errorMessage: string;\n  openItemCount = 0;\n  todoList: Todo[] = [];\n  formErrors = {\n    item: '',\n  };\n\n  validationMessages = {\n    item: {\n      required: 'Item is required.',\n      minlength: 'Item must be at least 3 characters',\n    },\n  };\n\n  constructor(private formBuilder: FormBuilder, private todoService: TodoService) {}\n\n  ngOnInit() {\n    this.addForm = this.formBuilder.group({\n      item: ['', [Validators.required, Validators.minLength(3)]],\n    });\n\n    this.addForm.statusChanges.subscribe(data => this.onStatusChange(data));\n\n    this.onStatusChange();\n\n    this.getTodoListAll();\n  }\n\n  onStatusChange(data?: any) {\n    if (!this.addForm) {\n      return;\n    }\n    const form = this.addForm;\n\n    for (const field in this.formErrors) {\n      if (this.formErrors.hasOwnProperty(field)) {\n        // clear previous error message (if any)\n        this.formErrors[field] = '';\n        const control = form.get(field);\n\n        if (control && control.dirty && !control.valid) {\n          const messages = this.validationMessages[field];\n          for (const key in messages) {\n            if (messages.hasOwnProperty(key) && control.hasError(key)) {\n              this.formErrors[field] += `${messages[key]} `;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  sortItems(): void {\n    this.todoList.sort(FieldSorter.sort(['completed', 'item'], true));\n  }\n\n  save(): void {\n    this.todoService.save(this.addForm.value.item).subscribe(\n      result => {\n        console.log('save result', result);\n        this.todoList.push(result);\n        this.openItemCount++;\n        this.sortItems();\n        this.addForm.reset();\n      },\n      (error: HttpErrorResponse) => {\n        this.errorMessage = `${error.status} ${error.statusText}. ${error.message}`;\n      }\n    );\n  }\n\n  getTodoListAll(): void {\n    this.todoService.getAll().subscribe(\n      (data: Todo[]) => {\n        this.todoList = data;\n        this.calculateOpenItems();\n        this.sortItems();\n      },\n      (error: HttpErrorResponse) => {\n        this.errorMessage = `${error.status} ${error.statusText}. ${error.message}`;\n      }\n    );\n  }\n\n  completeTodo(todo: Todo): void {\n    todo.completed = !todo.completed;\n    this.todoService.updateTodo(todo).subscribe(\n      (data: string) => {\n        // do nothing\n        console.log('updated todo', data, todo);\n        todo.completed ? this.openItemCount-- : this.openItemCount++;\n        this.sortItems();\n      },\n      (error: HttpErrorResponse) => {\n        console.log('error', error);\n        todo.completed = !todo.completed;\n        this.errorMessage = `${error.status} ${error.statusText}. ${error.message}`;\n      }\n    );\n  }\n\n  deleteTodo(todo: Todo): void {\n    if (confirm('Are you sure you want to delete?')) {\n      // delete call goes here\n      this.todoService.deleteTodo(todo).subscribe(\n        (data: string) => {\n          console.log('deleteTodo response', data, todo);\n          const index = this.todoList.indexOf(todo);\n          this.todoList.splice(index, 1);\n          if (todo.completed === false) {\n            this.openItemCount--;\n          }\n        },\n        (error: HttpErrorResponse) => {\n          todo.completed = !todo.completed;\n          this.errorMessage = `${error.status} ${error.statusText}. ${error.message}`;\n        }\n      );\n    }\n  }\n\n  calculateOpenItems(): void {\n    this.openItemCount = this.todoList.filter(item => item.completed === false).length;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  environmentName: 'Development',\n  apiBaseUrl: 'https://sails-ws.herokuapp.com'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}